version: "3.7"
services:
  postgres_db:
    container_name: postgres_db
    image: postgis/postgis
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./volumes/postgres_volume/:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=DB_NAME
      - POSTGRES_USER=DB_USER
      - POSTGRES_PASSWORD=DB_PASS
  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ./volumes/redis_volume/:/data/
  backend:
    container_name: backend
    build: ./backend
    restart: always
    depends_on:
      - postgres_db
      - redis
    ports:
      - 8000:8000
    volumes:
      - ./backend/:/backend/
    working_dir: /backend
    environment:
      - DJANGO_ENV=production
      - DB_HOST=postgres_db
      - DB_NAME=DB_NAME
      - DB_PASS=DB_PASS
      - DB_USER=DB_USER
      - REDIS_URL=redis://redis:6379/0
    command: bash -c  "python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      python manage.py loaddata  user/fixtures/users.json &&
      python manage.py loaddata asset/fixtures/assets.json &&
      python manage.py fixtures/celery/tasks.json &&
      python manage.py runserver 0.0.0.0:8000"

  backend_worker:
    container_name: backend_worker
    build: ./backend
    restart: always
    depends_on:
      - postgres_db
      - redis
    ports:
      - 8000:8000
    volumes:
      - ./backend/:/backend/
    working_dir: /backend
    environment:
      - DJANGO_ENV=production
      - DB_HOST=postgres_db
      - DB_NAME=DB_NAME
      - DB_PASS=DB_PASS
      - DB_USER=DB_USER
      - REDIS_URL=redis://redis:6379/0
    command: bash -c  "python manage.py makemigrations &&
      python manage.py migrate &&
      celery -A backend worker -B -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"